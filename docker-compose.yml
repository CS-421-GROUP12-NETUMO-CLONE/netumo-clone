version: '3.8'

services:
    # Load Balancer
    nginx:
        image: nginx:alpine
        container_name: netumo_nginx
        ports:
            - "80:80"
        volumes:
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
            - .:/var/www
        depends_on:
            - app1
            - app2
        networks:
            - netumo_clone_net

    vite:
        image: node:20
        container_name: netumo_vite_builder
        working_dir: /app
        volumes:
            - .:/app
        command: sh -c "npm install && npm run build"

    # netumo clone App 1
    app1:
        build:
            context: .
            dockerfile: docker/php/Dockerfile
        container_name: netumo_app1
        volumes:
            - .:/var/www
        env_file:
            - .env
        networks:
            - netumo_clone_net
        depends_on:
            - mysql
            - redis
            - vite
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost"]
            interval: 30s
            timeout: 10s
            retries: 3

    # Netumo clone App 2
    app2:
        build:
            context: .
            dockerfile: docker/php/Dockerfile
        container_name: netumo_app2
        volumes:
            - .:/var/www
        env_file:
            - .env
        networks:
            - netumo_clone_net
        depends_on:
            - mysql
            - redis
            - vite

    # Queue Worker
    worker:
        build:
            context: .
            dockerfile: docker/php/Dockerfile
        container_name: netumo_worker
        command: php artisan queue:work --tries=3
        volumes:
            - .:/var/www
        env_file:
            - .env
        networks:
            - netumo_clone_net
        depends_on:
            - mysql
            - redis

    # Scheduler
    scheduler:
        build:
            context: .
            dockerfile: docker/php/Dockerfile
        container_name: netumo_scheduler
        command: sh -c "while [ true ]; do php artisan schedule:run --verbose --no-interaction & sleep 60; done"
        volumes:
            - .:/var/www
        env_file:
            - .env
        networks:
            - netumo_clone_net
        depends_on:
            - mysql
            - redis

    # MySQL
    mysql:
        image: mysql:8.0
        container_name: netumo_mysql
        ports:
            - "3306:3306"
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: laravel
            MYSQL_USER: laravel
            MYSQL_PASSWORD: secret
        volumes:
            - dbdata:/var/lib/mysql
        networks:
            - netumo_clone_net

    # Redis
    redis:
        image: redis:alpine
        container_name: netumo_redis
        ports:
            - "6379:6379"
        volumes:
            - redisdata:/data
        networks:
            - netumo_clone_net

networks:
    netumo_clone_net:
        driver: bridge

volumes:
    dbdata:
    redisdata:
