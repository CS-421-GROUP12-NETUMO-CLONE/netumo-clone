name: CI/CD to EC2

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: PHP Lint
        run: find . -type f -name "*.php" -exec php -l {} \;

      - name: App Tests
        run: |
          cp .env.example .env
          composer install --no-scripts --no-plugins
          php artisan key:generate
          php artisan test

      - name: Docker Hub Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -e
            if [ ! -d "netumo-clone" ]; then
              git clone https://github.com/CS-421-GROUP12-NETUMO-CLONE/netumo-clone.git
            fi
            cd netumo-clone
            git fetch origin
            git reset --hard origin/master

            docker-compose pull
            docker-compose down
            docker-compose build --no-cache
            docker-compose up -d

            sleep 15

            CONTAINER=$(docker ps --format '{{.Names}}' | grep -E 'app[0-9]*|php' | head -n 1)

            if [ -z "$CONTAINER" ]; then
              echo "Could not find a running app container (name containing 'app')."
              exit 1
            fi

            DB_BACKUP_DIR="./database_backups"
            mkdir -p $DB_BACKUP_DIR
            BACKUP_FILE="$DB_BACKUP_DIR/backup_$(date +%Y%m%d_%H%M%S).sql.gz"

            echo "Creating database backup..."
            docker-compose exec -T db sh -c "mysqldump -u '${{ secrets.DB_USER }}' -p'${{ secrets.DB_PASS }}' '${{ secrets.DB_NAME }}' | gzip" > $BACKUP_FILE

            if [ ! -s "$BACKUP_FILE" ]; then
              echo "Database backup failed!"
              exit 1
            fi

            echo "Database backup created: $BACKUP_FILE"

            docker-compose exec $CONTAINER php artisan migrate --force
            docker-compose exec $CONTAINER php artisan storage:link
            docker-compose exec $CONTAINER php artisan optimize:clear
            docker-compose exec $CONTAINER php artisan optimize

            echo "Setting up Supervisor for queue worker..."
            sudo apt-get update
            sudo apt-get install -y supervisor

            sudo cp deploy/supervisor/netumo-worker.conf /etc/supervisor/conf.d/
            sudo supervisorctl reread
            sudo supervisorctl update
            sudo supervisorctl restart netumo-worker:*

            echo "Supervisor configured for queue worker"

      - name: Notify Slack on Success
        if: success()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_USERNAME: 'CI/CD Bot'
          SLACK_COLOR: good
          SLACK_ICON_EMOJI: ':rocket:'
          SLACK_TITLE: 'Deployment Succeeded'
          SLACK_MESSAGE: 'Netumo clone successfully deployed to EC2 from `master` branch.'

      - name: Notify Slack on Failure
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_USERNAME: 'CI/CD Bot'
          SLACK_COLOR: danger
          SLACK_ICON_EMOJI: ':x:'
          SLACK_TITLE: 'Deployment Failed'
          SLACK_MESSAGE: 'Netumo clone deployment to EC2 failed on `master` branch.'
